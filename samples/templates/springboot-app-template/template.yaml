apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: springboot-app-template
  title: Spring Boot Application
  description: Create a simple microservice using REST and Spring Boot for Java
  tags:
    - recommended
    - java
    - rest
    - openapi
spec:
  owner: user:jsa4000
  type: service

  parameters:
    - title: Provide Project Metadata
      required:
        - groupId
        - artifactId
        - name
        - version
        - owner
      properties:
        groupId:
          title: GroupId
          type: string
          pattern: "^[a-zA-Z0-9.]*$"
          minLength: 2
          maxLength: 128
          description: Unique base name of the Company or Group that created the Project
          default: com.example
        artifactId:
          title: ArtifactId
          type: string
          pattern: "^[a-zA-Z0-9]*$"
          minLength: 2
          maxLength: 64
          description: Unique name of the Project that infers the Package Name `groupId.artifactId`
          default: demo
        name:
          title: Application Name
          type: string
          pattern: "^[a-zA-Z0-9- ]*$"
          minLength: 2
          maxLength: 64
          description: Display Name of the Project
          default: demo
          #ui:field: EntityNamePicker
        version:
          title: Version
          type: string
          pattern: "^[a-zA-Z0-9-.]*$"
          minLength: 2
          maxLength: 64
          description: Initial version
          default: 0.0.1-SNAPSHOT
        description:
          title: Description
          type: string
          maxLength: 256
          description: Description of the Project
          default: Demo project for Spring Boot
        destination: 
          title: Secret Widget with Destination
          type: string
          ui:widget: hidden
        owner:
          title: Owner
          type: string
          description: Owner of the Component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User

    - title: Provide Additional Information
      required:
        - accountId
        - branch
        - registry
        - namespace
      properties:
        accountId:
          title: Git Account
          type: string
          description: Git Account to create the repository
          enum:
          - jsa4000
          default: jsa4000
          ui:disabled: true
        branch:
          title: Git Branch
          type: string
          pattern: "^[a-zA-Z0-9.-/]*$"
          description: Git Branch to create the repository
          default: main
        registry:
          title: Image Registry
          type: string
          description: Image Registry to publish Container Images
          enum:
          - jsa4000
          default: jsa4000
        kubernetes:
          title: Enable Kubernetes Deployment
          description: Enable Kubernetes Deplyoment And Configuration
          type: boolean
          default: true
        targetPath:
          title: Config Target Path
          type: string
          pattern: "^[a-zA-Z0-9-/.]*$"
          description: Path where the configuration will be created
          default: config
        namespace:
          title: Kubernetes Namespace
          type: string
          pattern: "^[a-zA-Z0-9-]*$"
          description: Kubernetes Namespace where the Application will be deployed
          default: micro
        
  steps:
    - id: archetype
      name: Fetch Archetype Template
      action: fetch:template
      input:
        url: ./archetype
        copyWithoutRender:
          - .github/workflows/*
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          artifactId: ${{ parameters.artifactId | lower}}
          packageName: ${{ parameters.groupId | lower }}
          packagePath: '${{ parameters.groupId | lower | replace(".", "/") }}'
          version: ${{ parameters.version }}
          registry: ${{ parameters.registry | lower }}
          namespace: ${{ parameters.namespace | lower }}
          owner: ${{ parameters.owner }}

    - id: config
      name: Fetch Congiguration Template
      action: fetch:template
      if: ${{ parameters.kubernetes === true }}
      input:
        url: ./config
        targetPath: ${{ parameters.targetPath }}
        copyWithoutRender:
          - templates/*
        values:
          artifactId: ${{ parameters.artifactId | lower}}
          packageName: ${{ parameters.groupId | lower }}
          version: ${{ parameters.version }}
          registry: ${{ parameters.registry | lower }}
          branch: ${{ parameters.branch | lower }}
          targetPath: ${{ parameters.targetPath }}
          namespace: ${{ parameters.namespace | lower }}
          owner: ${{ parameters.owner }}
          repoUrl: https://github.com/${{ parameters.accountId }}/${{ parameters.artifactId | lower }}-service-java.git

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        repoVisibility: public
        defaultBranch: ${{ parameters.branch | lower }}
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.accountId }}&repo=${{ parameters.artifactId | lower }}-service-java

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
