apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: yeoman-java-template
  title: Yeoman Java Template
  description: This is a Template to scaffold applications using Yeoman Java Generator
  tags:
    - yeoman
    - java
    - node
spec:
  owner: backstage
  type: service

  parameters:
    - title: Provide Application Configuration
      required:
       - owner
      properties:
        basic:
          title: Basic Information
          type: object
          properties:
            name:
              title: Name
              type: string
              description: Enter the project name
              ui:autofocus: true
              ui:options:
                rows: 5
            description:
              title: Description
              type: string
              description: Help others understand what this website is for.
          required:
            - name
        application:
          title: Application Type
          type: object
          properties:
            type:
              title: Generator Type
              description: Select type of artifact in order to generate
              type: string
              enum:
              - micro
              - soap-service
              - spi-service
              - cron
              default: micro
          required:
          - type
          dependencies:
            type:
              oneOf:
              - properties:
                  type:
                    enum:
                    - soap-service
                    - spi-service
                    - cron
              - properties:
                  type:
                    enum:
                    - micro
                  microserviceType:
                    title: Microservice Type
                    type: string
                    description: Desired Microservice Type
                    default: apifirst
                    enum:
                      - apifirst
                      - codefirst
                required:
                - microserviceType
        additional:       
          title: Additional Information
          type: object
          properties:
            persistenceLayer:
              title: Enable Persistence Layer
              description: Enable persistence layer
              type: boolean
              default: false
            feignClient:
              title: Enable Feign Client
              description: Enable @FeignClient in order to invoke other microservices
              type: boolean
              default: false
            jaxws:
              title: Enable JAX-WS for Web Services (SOAP)
              description: Enable JAX-WS and add dependencies needed for invoke WSDL/SOAP external services
              type: boolean
              default: false
            testcontainers:
              title: Enable Test Container
              description: Add dependencies and examples of integration testing with Testcontainer
              type: boolean
              default: true
            cucumberTest:
              title: Enable Cucumber Tests
              description: Experimental option (only add Maven dependencies)
              type: boolean
              default: false
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
              #- bitbucket.org

  steps:
    - id: yeoman
      name: Yeoman
      action: run:yeoman
      input:
        namespace: mauc:app
        args:
          - --cli
        options:
          projectName: ${{ parameters.basic.name }}
          appType: ${{ parameters.application.type }}
          microserviceType: ${{ parameters.application.microserviceType }}
          persistenceLayer: ${{ parameters.additional.persistenceLayer }}
          feignClient: ${{ parameters.additional.feignClient }}
          jaxws: ${{ parameters.additional.jaxws }}
          testcontainers: ${{ parameters.additional.testcontainers }}
          cucumberTest: ${{ parameters.additional.cucumberTest }}

    - id: catalog-write
      name: Write Catalog
      action: catalog:write
      input:
        filePath: catalog-info.yaml
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.basic.name }}
            description: ${{ parameters.basic.name }}
            annotations:
              github.com/project-slug: ${{ (parameters.repoUrl | parseRepoUrl)['owner'] + "/" + (parameters.repoUrl | parseRepoUrl)['repo'] }}
          spec:
            type: service
            owner: ${{ parameters.owner }}
            lifecycle: experimental

    - id: publish
      name: Publish
      action: publish:github
      #action: publish:bitbucket
      input:
        allowedHosts: ["github.com", "bitbucket.org" ]
        description: This is ${{ parameters.basic.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}